{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAD8C\\uD558\\uC740\\\\OneDrive\\\\Desktop\\\\github\\\\Next\\\\next\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport { useSelector } from \"react-redux\";\nimport CommentForm from './CommentForm';\nimport PostCardContent from \"./PostCardContent\";\nimport PostImages from './PostImages';\nimport FollowButton from \"./FollowButton\";\nimport post from \"../reducers/post\";\nconst CardWrapper = styled.div`\n    margin-bottom: 20px;\n`;\nconst PostCard = () => {\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const id = useSelector(state => state.user.me && state.user.me.id);\n  const {\n    0: liked,\n    1: setLinked\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLinked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return __jsx(CardWrapper, {\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 42\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClink: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 27\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClink: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 27\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClink: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 45\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 45\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 39\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }))],\n    extra: __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length} 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Link, {\n        href: {\n          pathname: '/user',\n          query: {\n            id: item.User.id\n          }\n        },\n        as: `/user/${item.User.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 41\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 45\n        }\n      }, __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 48\n        }\n      }, item.User.nickname[0]))),\n      content: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })));\n};\nPostCard.PropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  })\n};\nexport default PostCard;","map":{"version":3,"names":["React","useState","useCallback","Card","Button","Avatar","Popover","List","Comment","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","styled","Link","useSelector","CommentForm","PostCardContent","PostImages","FollowButton","post","CardWrapper","div","PostCard","commentFormOpened","setCommentFormOpened","id","state","user","me","liked","setLinked","onToggleLike","prev","onToggleComment","Images","User","nickname","content","Comments","length","item","pathname","query","shape","number","object","string","createAt","arrayOf","any"],"sources":["C:/Users/권하은/OneDrive/Desktop/github/Next/next/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { Card, Button, Avatar, Popover, List, Comment} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport Link from \"next/link\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport PostImages from './PostImages';\r\nimport FollowButton from \"./FollowButton\";\r\nimport post from \"../reducers/post\";\r\n\r\nconst CardWrapper = styled.div`\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst PostCard = () => {\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const id = useSelector((state) => state.user.me && state.user.me.id);\r\n\r\n    const [liked, setLinked] = useState(false);\r\n\r\n    const onToggleLike = useCallback(() => {\r\n        setLinked((prev) => !prev);\r\n    }, []);\r\n\r\n    const onToggleComment = useCallback(() =>{\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, []);\r\n\r\n    return (\r\n        <CardWrapper key={post.id}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    liked\r\n                        ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClink={onToggleLike} />\r\n                        : <HeartOutlined key=\"heart\" onClink={onToggleLike} />,\r\n                    <MessageOutlined key=\"message\" onClink={onToggleComment} />,\r\n                    <Popover\r\n                        key=\"ellipsis\"\r\n                        content={(\r\n                            <Button.Group>\r\n                                {id && post.User.id === id\r\n                                    ? (\r\n                                        <>\r\n                                            <Button>수정</Button>\r\n                                            <Button type=\"danger\">삭제</Button>\r\n                                        </>\r\n                                    )\r\n                                    : <Button>신고</Button>}\r\n                            </Button.Group>\r\n                        )}\r\n                    >\r\n                        <EllipsisOutlined />\r\n                    </Popover>,\r\n                ]}\r\n                extra={<FollowButton post={post} />}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={<PostCardContent postData={post.content} />}\r\n                />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <>\r\n                    <CommentForm post={post} />\r\n                    <List\r\n                        header={`${post.Comments.length} 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={(\r\n                                        <Link href={{ pathname: '/user', query: {id: item.User.id} }} as={`/user/${item.User.id}`}>\r\n                                            <a><Avatar>{item.User.nickname[0]}</Avatar></a>\r\n                                        </Link>\r\n                                    )}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </>\r\n            )}\r\n        </CardWrapper>\r\n    );\r\n};\r\n\r\nPostCard.PropTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.any),\r\n        Images: PropTypes.arrayOf(PropTypes.any),\r\n    }),\r\n};\r\n\r\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}