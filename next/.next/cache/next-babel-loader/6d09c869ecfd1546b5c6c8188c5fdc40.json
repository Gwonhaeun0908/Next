{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers/indext';\nconst configureStore = () => {\n  const middleware = [];\n  const enhancer = false ? compose(applyMiddleware(...middleware)) : composeWithDevTools(applyMiddleware(...middleware));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","configureStore","middleware","enhancer","store","wrapper","debug"],"sources":["C:/Users/권하은/OneDrive/Desktop/github/Next/next/store/configureStore.js"],"sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducer from '../reducers/indext';\r\n\r\nconst configureStore = () => {\r\n    const middleware = [];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middleware))\r\n        : composeWithDevTools(applyMiddleware(...middleware))\r\n    const store = createStore(reducer, enhancer);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,eAAe,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,OAAOC,OAAO,MAAM,oBAAoB;AAExC,MAAMC,cAAc,GAAG,MAAM;EACzB,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,QAAQ,GAAG,QACXN,OAAO,CAACD,eAAe,CAAC,GAAGM,UAAU,CAAC,CAAC,GACvCH,mBAAmB,CAACH,eAAe,CAAC,GAAGM,UAAU,CAAC,CAAC;EACzD,MAAME,KAAK,GAAGN,WAAW,CAACE,OAAO,EAAEG,QAAQ,CAAC;EAC5C,OAAOC,KAAK;AAChB,CAAC;AAED,MAAMC,OAAO,GAAGV,aAAa,CAACM,cAAc,EAAE;EAC1CK,KAAK;AACT,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}